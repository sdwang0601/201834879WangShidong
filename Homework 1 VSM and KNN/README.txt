项目介绍：
代码文件：VSMandKNN.py
其他文件夹：testdata，traindata,etc. save data.

VSMandKNN.py
代码实现的主要功能介绍如下：

1.预处理
首先将原数据集划分为训练数据集和测试数据集，其中训练数据占80%，测试数据占20%。
对于每一个类别得多个多个对象，即一个文件夹的多个文档，先读取八个对象对放到训练数据集，
再读取两个对象放到测试数据集，这样保证了测试数据集的均匀分布。
（也可以设定随机函数，随机指定百分之八十的数据划分到训练数据集）
其中：
1）预处理函数pretreat（）完成对数据集的划分，并调用写数据函数writedata(path1,path2)将划分的数据写到对应的数据集；
2）写数据函数writedata(path1,path2)：其中path1为原数据存储路径，path2为处理后的数据的输出路径。
然后用nltk进行一些文本的简单处理，如:去停词，提取词干，去掉数字只保留字母，并把所有大写字母转换为小写字母等。
（装nltk文件包的时候，选择ALL一直报错，所以没有全选，只装了用到的包）

2.VSM
主要工作包括建立字典，计算tf-idf值和生成向量Vector等。
1）函数creatidf()
主要功能是生成value值为idf的全局字典，其中为减少数据处理，通过计算词频（此处词频指词出现的次数）筛选掉一些词频较小得单词；
2）创建向量函数creatvector(inpath,outpath): 其中inpath为原数据存储路径，outpath为生成的向量的存储路径。
首先遍历文本，对每一个文本中的每一个单词计算tf的值，然后计算每一个单词tf-idf值，生成每一个文本的tf-idf字典，
对tf-idf字典进行降序排列，此处只选取前50个关键字做为此文本的关键词，取他们的tfidf值，生成新的tfidf字典，
然后加上其所属的类别作为一个向量，此向量为将其作为一条数据加入到list集中，最后用json的方式，将list向量集存储到对应的json文件。

3.KNN
主要工作是设定K的值，算出每一对向量的相似程度（余弦大小 =  AB / |A|*|B|），得出预测类别，比较得出预测准确率。
1）qiumo(vc)：vc为从json文件中读出的list，格式为：[[str,dict],[str,dict],[str,dict]]
主要功能为：对于每个向量求出其模的大小，存为list
2）knn()：
首先设定K的值，然后对于测试集的每一个向量，让其与训练集里的所有向量进行比较，存为list，list中为许多个二元组（类名和cos值），
取前K个与其最相似（cos值大）的向量，统计出前k个中出现的最多次数的类别，此类别为模型的预测类别，
让其与该向量的真实类别比较，若相同，即为预测成功，
最后对于全部的测试向量，计算出预测成功次数除以总测试次数，即为预测成功率。
